name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: claude-self-reflection/package-lock.json
    
    - name: Install dependencies
      run: |
        cd claude-self-reflection
        npm ci
    
    - name: Run unit tests
      run: |
        cd claude-self-reflection
        npm run test:unit
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-results
        path: claude-self-reflection/test-results.xml

  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    
    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
        options: >-
          --health-cmd "curl -f http://localhost:6333/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: scripts/requirements.txt
    
    - name: Install Node dependencies
      run: |
        cd claude-self-reflection
        npm ci
    
    - name: Install Python dependencies
      run: |
        pip install -r scripts/requirements.txt
    
    - name: Run integration tests
      run: |
        cd claude-self-reflection
        npm run test:integration
      env:
        QDRANT_URL: http://localhost:6333
        USE_LOCAL_EMBEDDINGS: true
    
    - name: Test import script
      run: |
        # Create test data
        mkdir -p test-logs
        echo '{"message":{"role":"user","content":"Test message"}}' > test-logs/test.jsonl
        
        # Run import
        CLAUDE_LOGS_PATH=test-logs python scripts/import-openai.py
        
        # Verify import
        python scripts/check-collections.py

  embedding-comparison:
    runs-on: ubuntu-latest
    name: Embedding Provider Tests
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[test embeddings]')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: |
        cd claude-self-reflection
        npm ci
    
    - name: Test local embeddings
      run: |
        cd claude-self-reflection
        USE_LOCAL_EMBEDDINGS=true npm run test:integration
    
    - name: Test OpenAI embeddings
      if: env.OPENAI_API_KEY != ''
      run: |
        cd claude-self-reflection
        EMBEDDING_PROVIDER=openai npm run test:integration
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    - name: Test Voyage embeddings
      if: env.VOYAGE_API_KEY != ''
      run: |
        cd claude-self-reflection
        EMBEDDING_PROVIDER=voyage npm run test:integration
      env:
        VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}

  performance-benchmark:
    runs-on: ubuntu-latest
    name: Performance Benchmarks
    
    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup environment
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: |
        cd claude-self-reflection
        npm ci
    
    - name: Run performance tests
      run: |
        cd claude-self-reflection
        node test/performance-benchmark.js
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: claude-self-reflection/benchmark-results.json
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const results = JSON.parse(fs.readFileSync('claude-self-reflection/benchmark-results.json', 'utf8'));
          
          const comment = `## Performance Benchmark Results
          
          | Metric | Value |
          |--------|-------|
          | Search Latency | ${results.searchLatency}ms |
          | Import Speed | ${results.importSpeed} conv/min |
          | Memory Usage | ${results.memoryUsage}MB |
          | Accuracy | ${results.accuracy}% |
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });